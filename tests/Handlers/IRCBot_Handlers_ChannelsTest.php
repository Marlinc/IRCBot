<?php

require_once dirname(__FILE__) . '/../../src/Handlers/Channels.php';
require_once dirname(__FILE__) . '/../../src/Types/Channel.php';

/**
 * Test class for IRCBot_Handlers_Channels.
 * Generated by PHPUnit on 2011-12-06 at 21:36:03.
 */
class IRCBot_Handlers_ChannelsTest extends PHPUnit_Framework_TestCase {

    /**
     * @var IRCBot_Handlers_Channels
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new IRCBot_Handlers_Channels;
        $channels = array();
        $channels[] = 'test-channel';
        $channels[] = 'TestChannel123.1';
        foreach ($channels as $channel) {
            $return = $this->object->addChan($channel, 0);
            $this->assertInstanceOf('IRCBot_Types_Channel', $return);
            $this->assertEquals($channel, $return->name);
        }
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testAddChan() {
        $return = $this->object->addChan('somechan', 0);
        $this->assertInstanceOf('IRCBot_Types_Channel', $return);
        $this->assertEquals('somechan', $return->name);
    }
    
    /**
     * @covers {className}::{origMethodName}
     */
    public function testGetChan() {
        $channels = array();
        $channels['test-channel'] = true;
        $channels['TestChannel123.1'] = true;
        $channels['doesn\'t extist'] = false;
        foreach ($channels as $channel => $shouldSucceed) {
            $return = $this->object->getChan($channel, 0);
            if ($shouldSucceed) {
                $this->assertEquals($channel, $return->name);
            } else {
                $this->assertNull($return);
            }
        }
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testDelChan() {
        $this->object->delChan('test-channel', 0);
        $this->assertNull($this->object->delChan('test-channel', 0));
    }

}

?>
